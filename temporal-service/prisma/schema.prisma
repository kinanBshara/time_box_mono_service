generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Timebox {
  id        Int      @id @default(autoincrement())
  title     String
  createdBy String
  createdAt DateTime @default(now())
  tasks     Task[]
  
    @@map("timeboxs")
}

model Task {
  id          Int       @id @default(autoincrement())
  title       String?
  state       State     @default(NOT_ASSIGNED)
  priority    Priority?
  timeboxId   Int?
  timeslotId  Int?      @unique
  createdBy   String
  userId      Int
  user        User @relation(fields: [userId], references: [id])

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  timebox     Timebox?  @relation(fields: [timeboxId], references: [id])
  timeboxslot Timeslot? @relation(fields: [timeslotId], references: [id])
  
  @@map("tasks")
}

model Timeslot {
  id        Int      @id @default(autoincrement())
  startAt   DateTime
  duration  DateTime?
  createdAt DateTime @default(now())
  task      Task?

  @@map("timeslots")
}

model User {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email String @unique
  password String

  firstname String?
  lastname String?

 tasks Task[]

  @@map("users")
}

enum State {
  NOT_ASSIGNED
  SUCCESS
  FAILED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}
